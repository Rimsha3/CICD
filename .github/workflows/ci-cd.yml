name: Terraform CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  terraform:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.4.6

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install boto3 requests

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan
        run: terraform plan -input=false \
          -var "appd_controller_host=${{ secrets.APPD_CONTROLLER_HOST }}" \
          -var "appd_license_key=${{ secrets.APPD_LICENSE_KEY }}"

      - name: Terraform Apply
        run: terraform apply -auto-approve

      - name: Deploy AppDynamics agent to EC2 via SSM
        run: |
          INSTANCE_IDS=$(terraform output -raw instance_ids)
          if [ -z "$INSTANCE_IDS" ]; then
            echo "No EC2 instances found. Exiting."
            exit 1
          fi
          echo "Deploying AppDynamics agent to EC2 instances: $INSTANCE_IDS"
          aws ssm send-command \
            --instance-ids $INSTANCE_IDS \
            --document-name "AWS-RunShellScript" \
            --parameters 'commands=[
              "wget -qO- https://download.appdynamics.com/download/prod/appdynamics-agents/AppDynamicsJavaAgent.zip -O /tmp/AppDynamicsJavaAgent.zip", 
              "unzip /tmp/AppDynamicsJavaAgent.zip -d /opt", 
              "echo \"controller.host=${{ secrets.APPD_CONTROLLER_HOST }}\" >> /opt/AppDynamicsJavaAgent/conf/controller-info.xml", 
              "echo \"controller.licenseKey=${{ secrets.APPD_LICENSE_KEY }}\" >> /opt/AppDynamicsJavaAgent/conf/controller-info.xml"
            ]' \
            --region ${{ secrets.AWS_REGION }}
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION || 'us-east-1' }}

      - name: Run tests on infrastructure
        run: python test_infrastructure.py
